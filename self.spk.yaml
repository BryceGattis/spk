pkg: spk/0.1.0
api: v0/package

build:
  options:
    - var: arch
    - { var: os, choices: [linux] }
    - { pkg: python, static: 3.7 }
    - pkg: pytest
    - pkg: mypy
    - { pkg: black, prereleasePolicy: IncludeAll }
    - pkg: nuitka/=0.6.7
    - pkg: pytest-mypy
    - pkg: pytest-cov
    - pkg: spfs/0.20.10
    - pkg: ruamel-yaml/0.16.10
    - pkg: colorama/0.4.3
    - pkg: typing-extensions/3.7
    - pkg: simplejson/3.17
    - pkg: semver/2.9
    - pkg: structlog/19.2
    - pkg: spops/0.1.11
    - pkg: sortedcontainers/2.1
    - pkg: pytz/>=2020
    - pkg: cerberus/1.3
  script:
    - export PYTHONDONTWRITEBYTECODE=1
    - /spfs/bin/python -m pip install --no-deps .

install:
  requirements:
    - { pkg: spfs, fromBuildEnv: x.x }
    - { pkg: ruamel-yaml, fromBuildEnv: x.x }
    - { pkg: colorama, fromBuildEnv: x.x }
    - { pkg: typing-extensions, fromBuildEnv: x.x }
    - { pkg: simplejson, fromBuildEnv: x.x }
    - { pkg: semver, fromBuildEnv: x.x }
    - { pkg: structlog, fromBuildEnv: x.x }
    - { pkg: spops, fromBuildEnv: x.x }
    - { pkg: sortedcontainers, fromBuildEnv: x.x }
    - { pkg: pytz, fromBuildEnv: ">=x.x" }
    - { pkg: cerberus, fromBuildEnv: x.x }
    - { pkg: pyparsing }

tests:
  - stage: sources
    script:
      - pwd
      - test -f .site/spi/.spdev.yaml
  - stage: build
    script: /spfs/bin/python -m "spk" --help
  - stage: install
    script:
      - $PREFIX/bin/spk --help
